IN PREVIOUS PROJECT WE HAVE SEEN CI & CD USING ANSBILE

IN THIS PROJECT WE WILL SEE HOW TO DEPLOY A WAR APPLICATION ON DOCKER CONTAINER THROUGH JENKINS WITHOUT ANSIBLE

Create Ec2 Instace

Install Docker and start service by using commands

yum install docker -y

systemctl start docker.service
systemctl status docker.service

useradd dockeradmin
passwd dockeradmin

usermod -aG docker dockeradmin

go to cd /opt
create docker directory
mkdir docker
cd docker

then execute below command and Write a Dockerfile  under /opt/docker

vi Dockerfile (D - Must be capital)

# Pull base image
From tomcat:8-jre8

# Maintainer
MAINTAINER "siva.3991@gmail.com"

# copy war file on to container
COPY ./webapp.war /usr/local/tomcat/webapps

Login into Jenkins Console and add Docker server to Execute commands from Jenkins

Manage Jenkins - Configure System  - Publish over SSH  - Add Docker Server and Credintials


Provide Name: DOCKER HOST (Name given for Ec2 Instance)
Host Name: Private IP address of Docker Host
User Name: dockeradmin (User Created in EC2 Instance)
Then Go to advanced Tab, click on Use password authentication, or use a different key
If you give Password and Click on Test Configuration it will show as failed , because you need to give Password less authientication

vim /etc/ssh/sshd_config

systemctl restart sshd.service
systemctl status sshd.service

Write a Docker file under /opt/docker

mkdir /opt/docker

### vi Dockerfile
# Pull base image 
From tomcat:8-jre8 

# Maintainer
MAINTAINER "valaxytech@gmail.com" 

# copy war file on to container 
COPY ./webapp.war /usr/local/tomcat/webapps

Then Click on Test Configuration, it will show as sucess.

Then Save

Then Click on New Item - Give Name (Ex: Docker_project-3 ) - Click on Maven Project

Click on Source Code Management - Provide GIT URL
Repository : https://github.com/ValaxyTech/hello-world.git
Branches to build : */master

Go to Pre-Steps Tab  - in that Goals and Options will be available 
Build Root POM: pom.xml
Goals and options : clean install package

IN POST BUILD OPTIONS: Send build artifacts over 
SSH SERVER: DOCKER HOST
Source files : webapp/target/*.war
Remove prefix : webapp/target
Remote directory : //opt//docker
Exec command : cd /opt/docker; docker build -t valaxy_demo .

HERE cd /opt/docker owned by the root user
give ownership to the user created (dockeradmin)

chown -R dockeradmin:dockeradmin /opt/docker

Then Click on Build
It will Create Tomcat & Valaxy_demo Images

If you type command i /opt/docker directory
webapp.war file will be generated

















