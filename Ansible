Create 3 Ec2 instances, one is for master and another 2 is for nodes
sudo amazon-linux-extras install ansible2 -y
yum install git python python-level python-pip openssl -y
host related configuration files all are stored in /etc
vi /etc/ansible/hosts (all inventrory files wil be stored in this file)
Below this line (Ex 1: Ungrouped hosts, specify before any group headers)
[dev]
private ip address
[qa]
private ip address
Always give private ip address, in real time in vpc you will give private ip address only
vi /etc/ansible/ansible.cfg (Configuration Files)
Uncomment Inventory & sudo_user (remove # for both the lines and save)
useradd ansible
passwd ansible (give password and enter and it will show /passwd: all authentication tokens updated successfully/).
visudo
then give (ansible ALL=(ALL)   NOPASSWD: ALL) to provide ansible permissions and save
vim /etc/ssh/sshd_config (to provide password less authentication)
change password authetication no to yes (line no:63)
Continue from Sl.No-14 to 19 in Node-1 & Node-2 respectively
when we change in ssh file we need to restart 
systemctl restart sshd.service (restart for BOTH MASTER AND NODES)
systemctl status sshd.service  (STATUS FOR BOTH MASTER AND NODES)
login to su -  ansible (for both master and nodes)
sudo ssh-keygen
key will be generated
sudo ssh-copy-id ansible@localhost (to login in to local host)
ssh ansible@localhost (local host will be connected - private ip)
exit
type the below command in Ansible Instance to connect to node-1
sudo ssh-copy-id ansible@"node-1 private ip"
enter password
ssh ansible@"private ip for node-1"
you will be connected to node-1
exit
repeat for Node-2 also and exit
Host Patterns
ansible all --list-hosts (to check ip address of all nodes)
ansible dev --list-hosts (to check devloper address of all nodes)
ansible qa --list-hosts ((to check qa address of all nodes)
to check node of praticular Ip we will use indexing
ansible all --list-hosts (indexing (n-1))
ansible all[1:3] --list-hosts
cd /tmp (you can check encrypted password
to check files created in all the nodes instead of individual checking
ansible all -a "ls"
ansible dev[0] -a "ls" (for particular node)
ansible all -a "touch file2" (to create files in all nodes)
ansible all -a "sudo yum install tree -y" (to install tree packages in tree")
ansible all -a "tree --version" (to check tree version)
ansible all -ba "yum remove tree -y" (b : become the sudo user, then you need not to give sudo)
Modules
ansible all -bm yum -a "pkg=tree state=present" - (to install) (like this only command need to give)
ansible all -bm yum -a "pkg=tree state=absent" ( to remove)
state = latest (to update already existing package)
state = started ( to start the package)
ansible all -bm yum -a "pkg=httpd state=present"
ansible all -bm service -a "name=httpd state=started"
ansible all -bm yum -a "pkg=httpd state=absent"
ansible all -bm user -a "name=phani" (to create users)
How to move files from master to nodes
Create file in master and write some content, then enter below command you need to mention source and destiation
ansible all -bm copy -a "src=f1 dest=/tmp"
ANSIBLE PLAYBOOK - IS A COLLECTION OF MODULES
A YAML starts with --- (3 hyphens)
There should be space between : and value.
vim task.yml
---
- hosts: dev
  user: ansible
become: yes
  connection: ssh
  vars:
  pkgname: httpd
  task:
    - name: INSTALLING HTTPD ON DEV NODES
action: yum name='{{pkgname}}' state=present

ansible playbook task.yml

HANDLERS - ONE TAKS IS INTERLINKED WITH ANOTHER TASK
USED TO NOTIFY (LIKE HTTPD NEEDS TO BE RESTARTED MEANS FIRST ITS NEEDS TO BE INSTALLED
notify: to be included is must in syntax


- hosts: dev
  user: ansible
become: yes
  connection: ssh
  task:
    - name: INSTALLING HTTPD ON DEV NODES
action: yum name=http  state=present
      notify:restart httpd

  handlers:
    - name:restart httpd
      action:servicename=httpd state=restarted
     
IF WE USE MULTIPLE THINGS WE WILL USE LOOPS LIKE IF WE WANT TO ADD MULTIPLE USERS AT A TIME; INDENTATION IS VERY IMPORTANT IN PLAYBOOKS

---
- hosts: dev
  user: ansible
  tasks:
- name:ADDINGMULTIPLEUSERS
      user:name='{{item}}'state=present
      with_items:
        - phani
        - kumar
        - vasu
        - madhu
        - kishore
TO CHECK USERS LIST IN ALL NODES
ansible all -ba "getent passwd"

ANSIBLE CONDITIONS
USES WHEN AND BOLLEAN PARAMETERS
Use the when condition to control whether a task or role runs or is skipped.

Ansible Vault
FOR HIGH END ENCRYPTION
ansible-vault create vault.yml
enter new password
then write some data and save
cat vault.yml
you will see in decrypted format
THESE VALULTS WILL BE USED IF WE WANT TO STORE USER CERDINTIALS IN SERVER OR SPECFIC PLAYBOOKS YOU ONLY WANT TO SEE WE WILL USE THESE VAULTS
asnible-vault edit "file name" - to edit
ansible-vault encrypt "file name" - to encrypt file

Ansible Tags
it becomes useful to be able to run only a specific part of it rather than running everything in the playbook. Ansible supports a tag attribute for this reason.
ansible-playbook task.yml --skip-tags "tag value mentioned in the task.yml file"


Ansible -Roles
if we want to use Playbook multiple no of Times we will use Ansible - Roles
if we want to do any work we wont do directly, first we will create template and from that template we will automate it
if we place playbook in proper structure it is known as roles
The role is the primary mechanism for breaking a playbook into multiple files. This simplifies writing complex playbooks and makes them easier to reuse
The breaking of the playbook allows you to break the playbook into reusable components.

mkdir -p playbook/roles/webserver/tasks/main.yml

Ansible Galaxy
Ansible Galaxy is a galaxy website where users can share roles and to a command-line tool for installing, creating, and managing roles.
Roles are used for reference only, each company has their own roles.


ansible-galaxy init phani (To create a role template suitable for submission to Ansible Galaxy)
ansible-galaxy search elasticsearch (it will print all the roles in ansible galaxy)
ansible-install galaxy alikins.elasticsearch
all the installed files will be stored at cd  home/ansible/.ansible/roles then press ll (you will see the downloaded roles)

      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
     
      

 
































