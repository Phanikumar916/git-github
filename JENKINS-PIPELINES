A Pipeline is a user-defined model of a CD pipeline. A Pipelineâ€™s code defines your entire build process, which typically includes 
stages for building an application, testing it and then delivering it
Step by Step Execution of Project
Pipe Line is having Stages like Agent, Node,  so we can exceute easily
In Free Style Jobs, we are having console Output line by line so what changes has done chekcing is difficult
In Piplines each is having step by step
Suppose if we create 3 Freestyle jobs then we need to build it each job seperately
This is can be done in single pipeline Job by using pipeline scripting
When we kill the Job in server (like kill -9 "ps id")
The Process will be killed in both Freestyle and pipe line
Now again we restarted systemctl restart jenkins then Pipeline job will be restarted from where it stopped
Freesytle job dont know what it running before it stopped so it cannot build further.
Jenkins Pipeline defined using text file called jenkins file
DSL - DOMAIN SPECIFIC LANGUAGE

PIPE LINE SYNTAX
SCRIPTED PIPE LINE
Starts with Node
Node - is a machine in which jenkins file can be executed
stage - tasks performed through the entire Pipeline
Step - a step tells Jenkins what to do at a particular point in time
In Scripted we have only stage

node {
    stage('stage1')
    {
        sh 'touch file1'
    }
    stage('stage2')
    {
        sh 'touch file2'
    }
}


IN SCRIPTED - node - stage - sh

DECLARATIVE PIPE LINE
In this pipe line we have stages an steps

pipeline {
    agent any
    stages {
        stage ('stage1')
        {
            steps {
                sh 'touch file1'
            }
        }
        
        stage ('stage2')
        {
            steps {
                sh 'touch file2'
            }
        }
    }
    
  In DECLARATIVE - Pipeline - agent any - stages - stage - steps - sh
  
  
  pipeline {
    agent any
    stages
    {
        stage ('stage1')
        {
            steps
            {
            sh 'echo "HELLO WORLD"'
            sh 'touch file1'
            }
        }
    }
}

Like above we cant give each and every command

pipeline {
    agent any
    stages
    {
        stage ('stage1')
        {
            steps
            {
            sh '''
            touch file3
            touch file4
            '''
            }
        }
    }
}
 
 
IN PIPELINE IT WILL SHOW INTIALLY BUILD ONLY
THEN SECOND TIME IT WILL SHOW BUILD WITH PARAMETERS
  
  pipeline {
    agent any
    parameters
    {
        string(name:'person' ,defaultValue:'phani' ,description:'how are you')
        booleanparam(name:'male' ,defaultValue:'true' ,description:'i am from kakinada')
        
    }
    stages
    {
        stage('parameters')
        {
            steps
            {
                sh 'echo "${name}"'
                sh 'echo "${person}"'
            }
        }
    }



ENVINORMENT VARIBLES
Environment variables are global key-value pairs Jenkins
Use Jenkins environment variables to avoid having to code the same values for each project
Other benefits of using Jenkins environment variables include improved security.

Go to build options
then select Execute Shell and
name=raham
location=hyd

echo "HAI, MY NAME IS ${name}, I AM FROM ${location}"
echo "BUILD ID IS ${BUILD_ID}"
echo "${GLOBAL_VAR}

Go to Dashboard
Click on Manage Jenkins
Click on Configure System
Go to Envinorment Variables
Give Name and Value (Ex: Name = global_var; Value = Devops)
then save
then enter that varialble in Build options (ex: echo "${GLOBAL_VAR}"

WHEN WE WANT TO CREATE A COPY
Like if we want Pipeline-1 copy in Pipeline-2
Click on New item 
and Enter an Item name
At bottam Copy from Option is available
Type Pipeline-1
then Pile line-2 will be created same as pipeline-1


PLUGIN MANAGEMENT

Go to dashboard  - Click on Manage Jenkins - Click on Manage Plugins
go to available TAB - Search Maven - Select Maven Integration 3.19
Click on Install without restart
Then go back to dashboard and Click on New Item, Now we can see Maven plugin



BLUE OCEAN

IT IS A JENKINS PLUGIN
IT ENHANCES JENKINS USER INTERFACE
IT IS UPDATED VERSION OF PIPE LINE LIKE VISUALIZATION 

Go to dashboard  - Click on Manage Jenkins - Click on Manage Plugins
go to available TAB - Search Blue - Blue Ocean Version 1.25.5 (from bottom it was 4th)
Click on Install without restart
GO TO DASH BOARD AND CLICK ON BLUE OCEAN
CLICK ON NEW PIPE LINE
CLICK ON GITHUB
THEN IT WILL SHOW CONNECT TO GITHUB, THEN CLICK ON CREATE ACCESS TOKEN
THEN IT WILL ASK PERSONAL ACCESS TOKENS
GO TO GITHUB - GO TO SETTINGS - GO TO DEVELOPER SETTINGS - CLICK ON PERSONAL ACCESS TOKENS
GENERATE NEW TOKEN - THEN IT WILL ASK GITHUB PASSWORD
SELECT SCOPES LIKE REPO, write:packages, admin:org, admin:public_key
Then Click on Generate Token, Token will be generated then save the token
THEN PASTE THE TOKEN, THEN IT WILL SHOW GIT HUB USERNAME
THEN CLICK ON USER NAME IT WILL GET THE REPOS YOU HAVE ALREADY CREATED
SELECT ANY ONE OF THE REPO
THEN CLICK ON O.K





















